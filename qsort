#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <string>

struct stu{
	char name[20];
	int age;
};

void qsort(void* base, size_t num, size_t width, int(*cmp)(const void* e1, const void* e2));

//void*类型的指针可以接收任何类型的地址
//void*类型的指针不能进行解引用操作
//void*类型的指针不能进行+-整数的操作

int cmp_int(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int cmp_float(const void* e1, const void* e2)
{
	return ((int)*(float*)e1 - *(float*)e2);
}

int cmp_stu_age(const void* e1, const void* e2)
{
	return ((struct stu*)e1)->age - ((struct stu*)e2)->age;
}

int cmp_stu_name(const void* e1, const void* e2)
{
	return strcmp(((struct stu*)e1)->name , ((struct stu*)e2)->name);

}

void iinntt()
{
	int arr[10] = { 9,8,7,6,5,4,3,2,1,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), cmp_int);
	for (int i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}

void ffllooaatt()
{
	float f[] = { 9.0,8.0,7.0,6.0,5.0 };
	int sz = sizeof(f) / sizeof(f[0]);
	qsort(f, sz, sizeof(f[0]), cmp_float);
	for (int i = 0; i < sz; i++)
	{
		printf("%f ", f[i]);
	}
}

void ssttrrucctt()
{
	struct stu s[3] = { {"juajua",20},{"mengda",18},{"yulu",19} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]),cmp_stu_age);
	for (int i = 0; i < sz; i++)
	{
		printf("%s %d ", s[i].name, s[i].age);
	}
	qsort(s, sz, sizeof(s[0]), cmp_stu_name);
	for (int i = 0; i < sz; i++)
	{
		printf("%s %d ", s[i].name, s[i].age);
	}
}

int main()
{
	iinntt();
	printf("\n");
	ffllooaatt();
	printf("\n");
	ssttrrucctt();
	return 0;
}
